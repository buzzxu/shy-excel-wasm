name: Build
on:
  push:
    branches: [ master ]
  workflow_dispatch:
  workflow_call:
  pull_request:
    branches:
      - master
jobs:

  test:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
        targetplatform: [x64]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
    environment: production
    env:
      GOOS: js
      GOARCH: wasm
      GO111MODULE: on
    steps:

    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get dependencies
      working-directory: ./cmd
      run: |
        go vet ./...


    - name: Build WASM
      run: |
        cd cmd
        GOOS=js GOARCH=wasm GO111MODULE=on CGO_ENABLED=0 go build -v -a -ldflags="-w -s" -gcflags=-trimpath="$(go env GOPATH)" -asmflags=-trimpath="$(go env GOPATH)" -o ../dist/shyexcel.wasm main.go
        gzip -f --best ../dist/shyexcel.wasm

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: NPM Build
      run: |
        npm install
        node ./node_modules/.bin/rollup -c scripts/rollup.config.prod.mjs
        cp README.md ./dist
        cp src/package.json ./dist

    - name: GitHub NPM Publish
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://npm.pkg.github.com'
    - run: npm ci
    - run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
